name: Deploy and Run Scrapers

on:
  schedule:
    - cron: '35 23 * * *'

jobs:
  deploy-and-run:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 'latest'
          terraform_wrapper: false
          
      - name: Terraform Init and Apply
        run: |
          terraform init
          terraform apply -auto-approve
        working-directory: terraformFiles
        env:
          TF_VAR_do_token: ${{ secrets.DO_API_KEY }}

      - name: Output Droplet IP
        run: |
          terraform output -raw droplet_ip
        working-directory: terraformFiles

      - name: Get Droplet IP
        id: get-ip
        run: |
          echo "DROPLET_IP=$(terraform output -raw droplet_ip)" >> $GITHUB_ENV
        working-directory: terraformFiles
        
      - name: Debug droplet IP
        run: |
          echo "Droplet IP is ${{ env.DROPLET_IP }}"
      - name: Setup SSH
        run: |
          echo "${{ secrets.DO_SCRAPER_KEY }}" > keyfilescrap.pem
          chmod 600 keyfilescrap.pem
        working-directory: ansible
          
      - name: Setup Ansible Inventory
        run: |
          echo "[droplets]" > inventory.yml
          echo "${{ env.DROPLET_IP }} ansible_user=root ansible_ssh_private_key_file=keyfilescrap.pem" >> inventory.yml
        working-directory: ansible

      - name: Print Ansible Inventory
        run: |
          echo "$(cat inventory.yml)"
        working-directory: ansible

      - name: Print working directory and list files
        run: |
          pwd
          ls -lah
        working-directory: ansible

      - name: Wait for SSH service to be ready
        run: |
          ATTEMPTS=0
          until ssh -o "StrictHostKeyChecking=no" -i keyfilescrap.pem root@${{ env.DROPLET_IP }} "echo 'SSH is up'" || [ $ATTEMPTS -eq 10 ]; do
            ATTEMPTS=$((ATTEMPTS+1))
            echo "Waiting for SSH to be ready (attempt $ATTEMPTS)..."
            sleep 10
          done
        working-directory: ansible

  
      - name: Run Ansible Playbook
        run: ansible-playbook playbook.yml -i inventory.yml -vvv
        working-directory: 'ansible'
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          
      - name: Destroy Infrastructure
        if: always()
        run: terraform destroy -auto-approve
        env:
          TF_VAR_do_token: ${{ secrets.DO_API_KEY }}
        working-directory: terraformFiles
