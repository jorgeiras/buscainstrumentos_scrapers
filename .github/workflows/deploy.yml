name: Create and Destroy Droplet with API

on: [push]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create Droplet
      id: create_droplet
      run: |
        RESPONSE=$(curl -X POST "https://api.digitalocean.com/v2/droplets" \
          -H "Authorization: Bearer ${{ secrets.DO_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"name":"github-action-droplet","region":"nyc3","size":"s-1vcpu-1gb","image":"ubuntu-20-04-x64","ssh_keys":["4b:f6:47:9b:a3:cc:6a:0a:5b:9f:8d:47:4e:8c:44:5f"]}')
        DROPLET_ID=$(echo $RESPONSE | jq '.droplet.id')
        echo "::set-output name=droplet_id::$DROPLET_ID"
        echo "Created Droplet ID: $DROPLET_ID"

    - name: Wait for Droplet to become ready
      run: sleep 60 # Wait for 60 seconds for the droplet to boot up

    - name: Transfer and Set Environment Variables
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DO_SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
      run: |
        SSH_KEY_PATH=$HOME/.ssh/github_action
        mkdir -p $HOME/.ssh
        echo "$DO_SSH_PRIVATE_KEY" > $SSH_KEY_PATH
        chmod 600 $SSH_KEY_PATH
        scp -o "StrictHostKeyChecking=no" -i $SSH_KEY_PATH <(echo "\
        export DB_USER=$DB_USER\n\
        export DB_PASS='$DB_PASS'\n\
        export DB_NAME=$DB_NAME\n\
        ") root@${{ steps.create_droplet.outputs.droplet_ip }}:/etc/profile.d/env.sh
        ssh -o "StrictHostKeyChecking=no" -i $SSH_KEY_PATH root@${{ steps.create_droplet.outputs.droplet_ip }} "chmod +x /etc/profile.d/env.sh && source /etc/profile.d/env.sh"

    - name: Clone Repository to Droplet
      env:
        SSH_KEY_PATH: ${{ github.workspace }}/.ssh/github_action
      run: |
        ssh -o "StrictHostKeyChecking=no" -i $SSH_KEY_PATH root@${{ steps.create_droplet.outputs.droplet_ip }} "git clone YOUR_GITHUB_REPO /path/to/repository"

    - name: Execute Setup Script on Droplet
      env:
        SSH_KEY_PATH: ${{ github.workspace }}/.ssh/github_action
      run: |
        ssh -o "StrictHostKeyChecking=no" -i $SSH_KEY_PATH root@${{ steps.create_droplet.outputs.droplet_ip }} "chmod +x /path/to/repository/bash_scripts/setup.sh && /path/to/repository/bash_scripts/setup.sh"
        
    - name: Do Something with the Droplet
      run: |
        echo "Placeholder for actions with the Droplet ID ${{ steps.create_droplet.outputs.droplet_id }}"
        # Example: SSH into the droplet or perform any actions you need
        # You would typically wait for the droplet to become available before attempting SSH connections

    - name: Destroy Droplet
      if: always()
      run: |
        echo "Waiting 20 seconds before destroying the Droplet..."
        sleep 20
        curl -X DELETE "https://api.digitalocean.com/v2/droplets/${{ steps.create_droplet.outputs.droplet_id }}" \
          -H "Authorization: Bearer ${{ secrets.DO_API_KEY }}"
        echo "Destroyed Droplet ID ${{ steps.create_droplet.outputs.droplet_id }}"
